apply plugin: 'com.android.application'

gradle.taskGraph.whenReady { taskGraph ->
    if(taskGraph.hasTask(':assembleRelease')) {
        def storePassword
        def keyPassword
        storePassword = System.console().readPassword("\n\n\nEnter keystore password: ")
        storePassword = new String(storePassword)

        if(storePassword.size() <= 0) {
            throw new InvalidUserDataException("Empty keystore password")
        }

        keyPassword = System.console().readPassword("\nEnter key password: ")
        keyPassword = new String(keyPassword)

        if(keyPassword.size() <= 0) {
            throw new InvalidUserDataException("Empty key password")
        }

        android.signingConfigs.release.storePassword = storePassword
        android.signingConfigs.release.keyPassword = keyPassword
    }
}

clean {
    delete 'assets'
    delete 'libs'
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

android {
    compileSdkVersion 26
    sourceSets {          
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
//            jni.srcDirs = ['/home/herry/workspace/pktriggercord/android/jni']
        }
    }
    // task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
    //         copy {
    //             from "/home/herry/workspace/pktriggercord/android/build/intermediates/ndkBuild/debug/obj/local/armeabi-v7a/pktriggercord-cli"
    //             into "assets"
    //         }

    // }

    defaultConfig {
        applicationId "info.melda.sala.pktriggercord"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 8405
        versionName "0.84.05"
        setProperty("archivesBaseName", "info.melda.sala.pktriggercord.PkTriggerCord-$versionName" );
         externalNativeBuild {
//             ndkBuild {
//                 targets "pktriggercord-cli"
//             }
             cmake {
                 // The paths to the protoc and grpc_cpp_plugin binaries on the host system (codegen
                 // is not cross-compiled to Android)
                 def protoc = project.hasProperty('protoc') ?
                         project.property('protoc') : '/usr/local/bin/protoc'
                 def grpc_cpp_plugin = project.hasProperty('grpc_cpp_plugin') ?
                         project.property('grpc_cpp_plugin') : '/usr/local/bin/grpc_cpp_plugin'

                 cppFlags "-std=c++14 -frtti -fexceptions"
                 arguments '-DANDROID_STL=c++_static'
                 arguments '-DRUN_HAVE_POSIX_REGEX=0'
                 arguments '-DRUN_HAVE_STD_REGEX=0'
                 arguments '-DRUN_HAVE_STEADY_CLOCK=0'
                 arguments '-Dprotobuf_BUILD_PROTOC_BINARIES=off'
                 arguments '-DgRPC_BUILD_CODEGEN=off'
                 arguments '-Dprotobuf_BUILD_TESTS=OFF'
                 arguments '-Dpkctrl_PROTOBUF_PROTOC_EXECUTABLE=' + protoc
                 arguments '-Dpkctrl_GRPC_CPP_PLUGIN_EXECUTABLE=' + grpc_cpp_plugin

                 targets 'pktriggercord-grpc-server',
                         'pk_ctrl_proto_lib',
                         'pktriggercord-pslr'
             }
         }
        ndk.abiFilters 'armeabi-v7a'
//        ndk.abiFilters 'x86','armeabi-v7a'
    }

    signingConfigs {
        release {
            storeFile file("${System.properties['user.home']}/progs/java_keystore_google_play.jks")
            storePassword ''
            keyAlias 'melda'
            keyPassword ''
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    externalNativeBuild {
//        ndkBuild {
//            path 'jni/Android.mk'
//        }
        cmake {
            path "jni/CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.0.2'
}

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://maven.google.com"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://maven.google.com"
        }
    }
}
